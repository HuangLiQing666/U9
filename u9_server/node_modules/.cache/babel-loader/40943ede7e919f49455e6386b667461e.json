{"remainingRequest":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1564726320066},{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      upwd: \"\"\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      // 获取用户输入的用户名\n      var uname = this.uname; // 获取用户输入的密码\n\n      var upwd = this.upwd; // 创建正则表达式进行验证\n\n      var reg = /^[a-z0-9]{3,12}$/i; // 如果验证失败 提示短消息\n\n      if (uname == \"\") {\n        this.$toast(\"用户名不能为空\");\n        return;\n      } else if (upwd == \"\") {\n        this.$toast(\"密码不能为空\");\n        return;\n      } else if (reg.test(uname) == false) {\n        this.$toast(\"用户名格式不正确\");\n        return;\n      } else if (reg.test(upwd) == false) {\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // 如果验证成功 发送axios请求\n\n\n      var obj = {\n        uname: uname,\n        upwd: upwd\n      };\n      this.axios.get(\"login\", {\n        params: obj\n      }).then(function (res) {\n        var code = res.data.code;\n        var msg = res.data.msg;\n\n        _this.$toast(msg);\n\n        if (code == 1) {\n          _this.$router.push({\n            path: \"/Product\"\n          });\n        }\n      }); // 获取服务器返回的结果\n      // 如果返回登录失败 -1 提示msg\n      // 如果登录成功 跳转到商品首页组件\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,YAAA;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA,UAAA,QAAA,KAAA,KAAA,CAFA,CAGA;;AACA,UAAA,OAAA,KAAA,IAAA,CAJA,CAKA;;AACA,UAAA,MAAA,mBAAA,CANA,CAOA;;AACA,UAAA,SAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OAHA,MAGA,IAAA,QAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA;AACA;AACA,OAHA,MAGA,IAAA,IAAA,IAAA,CAAA,KAAA,KAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA;AACA,OAHA,MAGA,IAAA,IAAA,IAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OApBA,CAqBA;;;AACA,UAAA,MAAA;AAAA,oBAAA;AAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA;AADA,OAAA,EAEA,IAFA,CAEA,eAAA;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA;AACA,YAAA,MAAA,IAAA,IAAA,CAAA,GAAA;;AACA,cAAA,MAAA,CAAA,GAAA;;AACA,YAAA,QAAA,CAAA,EAAA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA;AAAA,WAAA;AACA;AACA,OATA,EAvBA,CAiCA;AACA;AACA;AACA;AArCA;AAPA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-login\">\r\n        <mt-field label=\"用户名\" placeholder=\"请输入用户名\" v-model=\"uname\"></mt-field>\r\n        <mt-field label=\"密码\" placeholder=\"请输入密码\" v-model=\"upwd\" type=\"password\"></mt-field>\r\n        <mt-button @click=\"login\" size=\"large\">登录</mt-button>  \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            uname:\"\",\r\n            upwd:\"\",\r\n        }\r\n    },\r\n    methods:{\r\n        login(){\r\n            // 获取用户输入的用户名\r\n            var uname=this.uname;\r\n            // 获取用户输入的密码\r\n            var upwd=this.upwd;\r\n            // 创建正则表达式进行验证\r\n            var reg=/^[a-z0-9]{3,12}$/i;\r\n            // 如果验证失败 提示短消息\r\n            if(uname==\"\"){\r\n                this.$toast(\"用户名不能为空\")\r\n                return; \r\n            }else if(upwd==\"\"){\r\n                this.$toast(\"密码不能为空\")\r\n                return; \r\n            }else if(reg.test(uname)==false){\r\n                this.$toast(\"用户名格式不正确\")\r\n                return; \r\n            }else if(reg.test(upwd)==false){\r\n                this.$toast(\"密码格式不正确\")\r\n                return; \r\n            }\r\n            // 如果验证成功 发送axios请求\r\n            var obj={uname,upwd}\r\n            this.axios.get(\"login\",{\r\n                params:obj\r\n            }).then(res=>{\r\n                var code=res.data.code;\r\n                var msg=res.data.msg;\r\n                this.$toast(msg);\r\n                if(code==1){\r\n                    this.$router.push({path:\"/Product\"})\r\n                }  \r\n            })\r\n            // 获取服务器返回的结果\r\n            // 如果返回登录失败 -1 提示msg\r\n            // 如果登录成功 跳转到商品首页组件\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>\r\n\r\n"],"sourceRoot":"src\\components\\xz"}]}