{"remainingRequest":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\src\\main.js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\src\\main.js","mtime":1564998802777},{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport Vuex from \"vuex\";\n/* 引入第三方的组件库 mint ui\r\n  1.完整引入Mint ui 组件库中所有组件\r\n  2.单独引入mint ui组件库中的样式\r\n  3.将mint ui 注册到vue示例中\r\n*/\n\nimport MintUI from \"mint-ui\";\nimport \"mint-ui/lib/style.css\";\nVue.use(MintUI); // 字体图标\n\nimport \"./font/iconfont.css\"; // 引入axios\n\nimport axios from \"axios\"; // 配置axios基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:3000/\"; // 配置axios保存session信息\n\naxios.defaults.withCredentials = true; // 注册axios到vue实例中\n// 由于axios不支持use实例 所以将实例axios添加到vue原型上\n\nVue.prototype.axios = axios;\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0\n  },\n  //共享数据\n  mutations: {\n    //添加修改数据函数\n    increment: function increment(state) {\n      //购物车数量加1\n      state.cartCount++;\n    },\n    clear: function clear(state) {\n      //购物车清空\n      state.cartCount = 0;\n    }\n  },\n  getters: {\n    //添加获取数据函数\n    getCartCount: function getCartCount(state) {\n      return state.cartCount;\n    }\n  },\n  actions: {//添加异步操作数据函数\n  }\n});\nVue.config.productionTip = false;\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  } // app=>>>app.vue\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","Vuex","MintUI","use","axios","defaults","baseURL","withCredentials","prototype","store","Store","state","cartCount","mutations","increment","clear","getters","getCartCount","actions","config","productionTip","render","h","$mount"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA;;;;;;AAKA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAO,uBAAP;AACAJ,IAAIK,GAAJ,CAAQD,MAAR,E,CACA;;AACA,OAAO,qBAAP,C,CACA;;AACA,OAAOE,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,OAAf,GAAuB,wBAAvB,C,CACA;;AACAF,MAAMC,QAAN,CAAeE,eAAf,GAA+B,IAA/B,C,CACA;AACA;;AACAT,IAAIU,SAAJ,CAAcJ,KAAd,GAAoBA,KAApB;AACAN,IAAIK,GAAJ,CAAQF,IAAR;AACA,IAAIQ,QAAM,IAAIR,KAAKS,KAAT,CAAe;AACvBC,SAAM;AAACC,eAAU;AAAX,GADiB;AACK;AAC5BC,aAAU;AAAkB;AAC1BC,aADQ,qBACEH,KADF,EACQ;AAAG;AACjBA,YAAMC,SAAN;AACD,KAHO;AAIRG,SAJQ,iBAIFJ,KAJE,EAII;AAAM;AAChBA,YAAMC,SAAN,GAAgB,CAAhB;AACD;AANO,GAFa;AAUvBI,WAAQ;AAAoB;AAC1BC,gBADM,wBACON,KADP,EACa;AACjB,aAAOA,MAAMC,SAAb;AACD;AAHK,GAVe;AAevBM,WAAQ,CAAoB;AAApB;AAfe,CAAf,CAAV;AAqBApB,IAAIqB,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAGA,IAAItB,GAAJ,CAAQ;AACNE,gBADM;AAENS,cAFM;AAGNY,UAAQ;AAAA,WAAKC,EAAEvB,GAAF,CAAL;AAAA,GAHF,CAGc;;AAHd,CAAR,EAIGwB,MAJH,CAIU,MAJV","sourceRoot":"C:\\Users\\web\\Desktop\\VUE-UI\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport Vuex from \"vuex\"\r\n/* 引入第三方的组件库 mint ui\r\n  1.完整引入Mint ui 组件库中所有组件\r\n  2.单独引入mint ui组件库中的样式\r\n  3.将mint ui 注册到vue示例中\r\n*/\r\nimport MintUI from \"mint-ui\"\r\nimport \"mint-ui/lib/style.css\" \r\nVue.use(MintUI)\r\n// 字体图标\r\nimport \"./font/iconfont.css\"\r\n// 引入axios\r\nimport axios from \"axios\"\r\n// 配置axios基础路径\r\naxios.defaults.baseURL=\"http://127.0.0.1:3000/\"\r\n// 配置axios保存session信息\r\naxios.defaults.withCredentials=true\r\n// 注册axios到vue实例中\r\n// 由于axios不支持use实例 所以将实例axios添加到vue原型上\r\nVue.prototype.axios=axios\r\nVue.use(Vuex)\r\nvar store=new Vuex.Store({\r\n  state:{cartCount:0},        //共享数据\r\n  mutations:{                 //添加修改数据函数\r\n    increment(state){  //购物车数量加1\r\n      state.cartCount++;\r\n    },\r\n    clear(state){     //购物车清空\r\n      state.cartCount=0;\r\n    }\r\n  },\r\n  getters:{                   //添加获取数据函数\r\n    getCartCount(state){\r\n      return state.cartCount;\r\n    }\r\n  },\r\n  actions:{                   //添加异步操作数据函数\r\n    \r\n  }\r\n})\r\n\r\n\r\nVue.config.productionTip = false\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App) // app=>>>app.vue\r\n}).$mount('#app')\r\n"]}]}